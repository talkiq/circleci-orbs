version: 2.1
description: "Tools for running test commands."

jobs:
  pipcheck:
    description: |
      Runs pip check against the current repo.
    docker:
      - image: python:<<parameters.python_version>>
    resource_class: <<parameters.resource_class>>
    parameters:
      cache_prefix:
        default: ''
        description: >
          Optional cache prefix to be used on CircleCI. Can be used for cache
          busting or to ensure multiple jobs use different caches.
        type: string
      cwd:
        default: '.'
        description: >
          Working directory used when running pip / pytest commands.
        type: string
      enable_caching:
        default: true
        description: |
          Whether the CircleCI cache should be used for pip dependencies.
        type: boolean
      install_args:
        default: pytest
        description: |
          Arguments to `pip install` command.
        type: string
      python_version:
        default: 3.7.2
        description: |
          The python version used to run pytest.
        type: string
      resource_class:
        default: small
        type: string
    steps:
      - checkout
      - when:
          condition: <<parameters.enable_caching>>
          steps:
            - restore_cache:
                keys:
                  - cache-pip-<<parameters.python_version>>-<<parameters.cache_prefix>>-{{ .Branch }}-{{ .Revision }}
                  - cache-pip-<<parameters.python_version>>-<<parameters.cache_prefix>>-{{ .Branch }}-
                  - cache-pip-<<parameters.python_version>>-<<parameters.cache_prefix>>-
      - run:
          name: python -m pip install --progress-bar=off <<parameters.install_args>>
          command: |
            cd <<parameters.cwd>>
            python -m pip install --progress-bar=off <<parameters.install_args>>
      - when:
          condition: <<parameters.enable_caching>>
          steps:
            - save_cache:
                key: cache-pip-<<parameters.python_version>>-<<parameters.cache_prefix>>-{{ .Branch }}-{{ .Revision }}
                paths:
                  - ~/.cache/pip
      - run:
          name: python -m pip check
          command: |
            cd <<parameters.cwd>>
            python -m pip check

  pytest:
    description: |
      Runs pytest against the current repo.
    docker:
      - image: python:<<parameters.python_version>>
    resource_class: <<parameters.resource_class>>
    parameters:
      args:
        default: ''
        description: |
          Arguments to pass to pytest.
        type: string
      cache_prefix:
        default: ''
        description: >
          Optional cache prefix to be used on CircleCI. Can be used for cache
          busting or to ensure multiple jobs use different caches.
        type: string
      cwd:
        default: '.'
        description: >
          Working directory used when running pip / pytest commands.
        type: string
      enable_caching:
        default: true
        description: |
          Whether the CircleCI cache should be used for pip dependencies.
        type: boolean
      install_args:
        default: pytest
        description: |
          Arguments to `pip install` command.
        type: string
      python_version:
        default: 3.7.2
        description: |
          The python version used to run pytest.
        type: string
      resource_class:
        default: small
        type: string
    steps:
      - checkout
      - when:
          condition: <<parameters.enable_caching>>
          steps:
            - restore_cache:
                keys:
                  - cache-pip-<<parameters.python_version>>-<<parameters.cache_prefix>>-{{ .Branch }}-{{ .Revision }}
                  - cache-pip-<<parameters.python_version>>-<<parameters.cache_prefix>>-{{ .Branch }}-
                  - cache-pip-<<parameters.python_version>>-<<parameters.cache_prefix>>-
      - run:
          name: python -m pip install --progress-bar=off <<parameters.install_args>>
          command: |
            cd <<parameters.cwd>>
            python -m pip install --progress-bar=off <<parameters.install_args>>
      - when:
          condition: <<parameters.enable_caching>>
          steps:
            - save_cache:
                key: cache-pip-<<parameters.python_version>>-<<parameters.cache_prefix>>-{{ .Branch }}-{{ .Revision }}
                paths:
                  - ~/.cache/pip
      - run:
          name: python -m pytest <<parameters.args>>
          command: |
            cd <<parameters.cwd>>
            python -m pytest <<parameters.args>>

  docker-compose:
    description:
      Runs docker-compose service
    docker:
      - image: <<parameters.executor>>
    resource_class: <<parameters.resource_class>>
    parameters:
      args:
        default: ''
        description: |
          Arguments to pass to downstream container
        type: string
      build:
        default: ''
        description: |
          Services to build besides target service
        type: string
      cwd:
        default: '.'
        description: >
          Working directory used when running docker-compose commands.
        type: string
      executor:
        default: cimg/base:2020.01
        description: >
          Name of the docker image to use to execute the job.
        type: string
      resource_class:
        default: small
        type: string
      service_name:
        description: >
          Name of docker-compose service to run
        type: string
    steps:
      - setup_remote_docker:
          version: 18.09.3
      - checkout
      - run:
          working_directory: <<parameters.cwd>>
          # has to be built explicitly https://github.com/docker/compose/issues/7336
          command: docker-compose build <<parameters.service_name>> <<parameters.build>>
          environment:
            DOCKER_BUILDKIT: 1
            COMPOSE_DOCKER_CLI_BUILD: 1
      - run:
          working_directory: <<parameters.cwd>>
          command: docker-compose run --rm <<parameters.service_name>> <<parameters.args>>
